name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}   
        
    - name: Prepare cache
      uses: actions/cache@v2
      with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-        
   
    - name: Create env file
      run: |
          touch .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} > .env
          echo MONGODB_URL=${{ secrets.MONGODB }} >> .env
          echo ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} >> .env
          echo ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} >> .env
          echo ADMIN_PASSWORD_HASHED=${{ secrets.ADMIN_PASSWORD_HASHED }} >> .env
          echo ADMIN_ACCESS_TOKEN=${{ secrets.ADMIN_ACCESS_TOKEN }} >> .env
          mkdir tmp
          cd tmp
          mkdir uploads
      
    - name: Install dependencies
      run: npm ci
      
    - name: Heroku deploy
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "amormiau-backend"
          heroku_email: "leo.brsouza@gmail.com"
          

  tests:
    needs: deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}   
        
    - name: Prepare cache
      uses: actions/cache@v2
      with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-        
   
    - name: Create env file
      run: |
          touch .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} > .env
          echo MONGODB_URL=${{ secrets.MONGODB }} >> .env
          echo ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} >> .env
          echo ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} >> .env
          echo ADMIN_PASSWORD_HASHED=${{ secrets.ADMIN_PASSWORD_HASHED }} >> .env
          echo ADMIN_ACCESS_TOKEN=${{ secrets.ADMIN_ACCESS_TOKEN }} >> .env
          mkdir tmp
          cd tmp
          mkdir uploads
          
      
    - name: Install dependencies
      run: npm ci
            
    - name: test      
      run: npm test
      
