name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}   
        
    - name: Prepare cache
      uses: actions/cache@v2
      with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-        
   
    - name: Create env file
      run: |
          touch .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} > .env
          echo MONGODB_URL=${{ secrets.MONGODB }} >> .env
          echo ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }} >> .env
          echo ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} >> .env
          echo ADMIN_PASSWORD_HASHED=${{ secrets.ADMIN_PASSWORD_HASHED }} >> .env
          echo ADMIN_ACCESS_TOKEN=${{ secrets.ADMIN_ACCESS_TOKEN }} >> .env
          
      
    - name: Install dependencies
      run: npm ci
      
   ## - name: Vercel Action
  #   run: |          
        #  npm i -g vercel
       #   npm install @vercel/node
       #   vercel --prod --debug --confirm --token ${{ secrets.VERCEL_TOKEN }} 
    #  uses: amondnet/vercel-action@v20.0.1
   #   with:
       #   vercel-token: ${{ secrets.VERCEL_TOKEN }} 
       #   vercel-args: --prod
        #  vercel-project-id: ${{ secrets.PROJECT_ID}} 
        #  vercel-org-id: ${{ secrets.ORG_ID}}
        
    - name: Vercel Action
      uses: amondnet/vercel-action@v20.0.1
      with:
       vercel-token: ${{ secrets.VERCEL_TOKEN }} 
       vercel-args: --prod
       vercel-project-id: ${{ secrets.PROJECT_ID}} 
       vercel-org-id: ${{ secrets.ORG_ID}}
       scope: leonardobumbeers
       
